<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d6/db8/_capstone_drawing_area_8cpp" kind="file" language="C++">
    <compoundname>CapstoneDrawingArea.cpp</compoundname>
    <includes refid="d3/d3e/_capstone_drawing_area_8h" local="yes">CapstoneDrawingArea.h</includes>
    <incdepgraph>
      <node id="22">
        <label>OSMQueue.h</label>
        <link refid="d9/da9/_o_s_m_queue_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gtkmm/drawingarea.h</label>
      </node>
      <node id="20">
        <label>queue</label>
      </node>
      <node id="19">
        <label>OSMDownloadQueue.h</label>
        <link refid="df/d2b/_o_s_m_download_queue_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>expat.h</label>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="24">
        <label>OSMDownloader.h</label>
        <link refid="dd/dac/_o_s_m_downloader_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="5">
        <label>CairoDrawer.h</label>
        <link refid="d6/dff/_cairo_drawer_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>LatLonUtility.h</label>
        <link refid="d5/d00/_lat_lon_utility_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>MappingStructs.h</label>
        <link refid="da/de9/_mapping_structs_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>curl/curl.h</label>
      </node>
      <node id="7">
        <label>future</label>
      </node>
      <node id="23">
        <label>OSMDrawingQueue.h</label>
        <link refid="de/dd0/_o_s_m_drawing_queue_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gtkmm.h</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="1">
        <label>src/CapstoneDrawingArea.cpp</label>
        <link refid="d6/db8/_capstone_drawing_area_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>CapstoneDrawingArea.h</label>
        <link refid="d3/d3e/_capstone_drawing_area_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>mutex</label>
      </node>
      <node id="18">
        <label>chrono</label>
      </node>
      <node id="16">
        <label>thread</label>
      </node>
      <node id="4">
        <label>CapstoneMapping.h</label>
        <link refid="d0/d6c/_capstone_mapping_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ScreenUtility.h</label>
        <link refid="da/d73/_screen_utility_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>OSMDataParser.h</label>
        <link refid="df/d9e/_o_s_m_data_parser_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>CapstoneDrawingArea.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>May<sp/>22,<sp/>2020</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>roseba</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CapstoneDrawingArea.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">CapstoneDrawingArea::CapstoneDrawingArea()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;add_events(Gdk::EventMask(<sp/>GDK_STRUCTURE_MASK<sp/>|<sp/>GDK_POINTER_MOTION_MASK<sp/>|<sp/><sp/>GDK_BUTTON_MOTION_MASK<sp/>|<sp/>GDK_BUTTON_PRESS_MASK<sp/>|<sp/>GDK_BUTTON_RELEASE_MASK<sp/>|<sp/>GDK_PROPERTY_CHANGE_MASK<sp/><sp/>));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;downloading_queue<sp/>=<sp/>std::make_shared&lt;OSMDownloadQueue&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;drawing_queue<sp/>=<sp/>std::make_shared&lt;OSMDrawingQueue&lt;bool&gt;&gt;();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>capstone_mapping<sp/>=<sp/><sp/>std::make_unique&lt;CapstoneMapping&gt;(downloading_queue,<sp/>drawing_queue);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">CapstoneDrawingArea::~CapstoneDrawingArea()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::initalize(<ref refid="d5/dda/structlatlon__point__t" kindref="compound">latlon_point_t</ref><sp/>big_map_center)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set_visible(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set_can_focus(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>capstone_mapping-&gt;latlon_utility-&gt;setBigMapLatlonCenter(big_map_center);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>capstone_mapping-&gt;createBigMap();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>sigc::slot&lt;bool&gt;<sp/><sp/>this_slot<sp/>=<sp/>sigc::mem_fun&lt;bool&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;CapstoneDrawingArea::timedRedraw);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>sigc::connection<sp/>conn<sp/>=<sp/>Glib::signal_timeout().connect(this_slot<sp/>,<sp/>REDRAW_INTERVAL<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::on_motion_notify_event(GdkEventMotion<sp/>*motion_event)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motion_event-&gt;state<sp/>&amp;<sp/>GDK_BUTTON1_MASK){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;moveOffset(motion_event-&gt;x,<sp/>motion_event-&gt;y);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;queue_draw();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d0f/structscreen__point__t" kindref="compound">screen_point_t</ref><sp/>bigMapMoved;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigMapMoved.X<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().X<sp/>+motion_event-&gt;x;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigMapMoved.Y<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().Y<sp/>+motion_event-&gt;y;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d40/structpercentage__point__t" kindref="compound">percentage_point_t</ref><sp/>percent<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;calculateAnyScreenPercentage(bigMapMoved);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dda/structlatlon__point__t" kindref="compound">latlon_point_t</ref><sp/>current<sp/>=<sp/>capstone_mapping-&gt;latlon_utility-&gt;calculateAnyLatLonPoint(percent);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;current.latitude&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;current.longitude;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;set_tooltip_text(ss.str().c_str());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d0f/structscreen__point__t" kindref="compound">screen_point_t</ref><sp/>pressedAt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>pressedAt.X<sp/>=<sp/>motion_event-&gt;x;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>pressedAt.Y<sp/>=<sp/>motion_event-&gt;y;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;setPressedAt(pressedAt);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::on_button_press_event(GdkEventButton<sp/>*button_event)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="de/d0f/structscreen__point__t" kindref="compound">screen_point_t</ref><sp/>pressedAt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pressedAt.X<sp/>=<sp/>button_event-&gt;x;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pressedAt.Y<sp/>=<sp/>button_event-&gt;y;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;setPressedAt(pressedAt);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::on_button_release_event(GdkEventButton<sp/>*release_event)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d0f/structscreen__point__t" kindref="compound">screen_point_t</ref><sp/>bigMapReleased;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>bigMapReleased.X<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().X<sp/>+release_event-&gt;x;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>bigMapReleased.Y<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().Y<sp/>+release_event-&gt;y;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d40/structpercentage__point__t" kindref="compound">percentage_point_t</ref><sp/>percent<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;calculateAnyScreenPercentage(bigMapReleased);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dda/structlatlon__point__t" kindref="compound">latlon_point_t</ref><sp/>current_latlon_center<sp/>=<sp/>capstone_mapping-&gt;latlon_utility-&gt;calculateAnyLatLonPoint(percent);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::on_draw(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cairo::RefPtr&lt;Cairo::Context&gt;<sp/>&amp;cr)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d49/structscreen__size__t" kindref="compound">screen_size_t</ref><sp/>allocated;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>allocated.width<sp/>=<sp/>this-&gt;get_allocated_width();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>allocated.height=<sp/>this-&gt;get_allocated_height();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;setAllocated(allocated);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capstone_mapping-&gt;screen_utility-&gt;isRecenter()){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d0f/structscreen__point__t" kindref="compound">screen_point_t</ref><sp/>offset;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d49/structscreen__size__t" kindref="compound">screen_size_t</ref><sp/><sp/>big_map_pixel_size<sp/>=<sp/>capstone_mapping-&gt;screen_utility-&gt;getBigMapPixelSize();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset.X<sp/>=<sp/>big_map_pixel_size.width/2.0-capstone_mapping-&gt;screen_utility-&gt;getAllocated().width/2;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset.Y<sp/>=<sp/>big_map_pixel_size.height/2.0-capstone_mapping-&gt;screen_utility-&gt;getAllocated().height/2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;setOffset(offset);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capstone_mapping-&gt;screen_utility-&gt;setRecenter(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Cairo::RefPtr&lt;Cairo::Surface&gt;<sp/>little_surface;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>little_surface<sp/>=<sp/>Cairo::Surface::create(capstone_mapping-&gt;getMappingSurface(),<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().X,<sp/>capstone_mapping-&gt;screen_utility-&gt;getOffset().Y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(allocated.width),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(allocated.height));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>cr-&gt;set_source(<sp/>little_surface,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>cr-&gt;paint();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CapstoneDrawingArea::timedRedraw()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><sp/>&quot;red<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res=<sp/><sp/>drawing_queue-&gt;pull();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!res)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;END<sp/>OF<sp/>DRAWING<sp/>QUEUE&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue_draw();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/CapstoneDrawingArea.cpp"/>
  </compounddef>
</doxygen>
